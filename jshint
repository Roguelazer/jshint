#!/bin/sh
#
# A command-line frontent to jshint.
# We try to auto-detect a supported environment and use it.
#
# TODO: auto-detect the node jshint frontend
#

# change this if you're installing to a non-standard location. for testing
# and such, run jshint with -t to try and deduce the path from the location
# of this script
root="/usr/share/jshint"

jsopts="{}"
files=""

getopt_short_only=0
getopt -T > /dev/null
if [ $? -ne 4 ] ; then
	getopt_short_only=1
fi

quiet() {
	"$@" >/dev/null 2>&1
}

abspath() {
	path="$1"
	if [ `expr "$path" : "/"` -eq 1 ] ; then
		echo $path
	else
		echo "`pwd`/$path"
	fi
}

usage() {
	if [ $getopt_short_only -eq 1 ] ; then
		echo "usage: jshint [-h] [-t] ['{\"opt1\":true,\"opt2\":false}'] file1.js ..." >&2
	else
		echo "usage: jshint [--help] [--testing] ['{\"opt1\":true,\"opt2\":false}'] file1.js ..." >&2
	fi
	exit 1
}

first=1
addFile() {
	opt="$1"
	opt=`abspath "$opt"`
	if [ $first -eq 1 ] ; then
		first=0
		files="$opt"
	else 
		files="$opt\n$files"
	fi
}

getOpts() {
	if [ $getopt_short_only -eq 1 ] ; then
		TEMP=`getopt 'ht' $*`
	else
		TEMP=`getopt -o 'ht' --long 'help,testing' -n "$0" -- "$@"`
		eval set -- $TEMP
	fi
	while [ $# -gt 0 ] ; do
		opt=$1
		shift
		case "$opt" in
			-h | --help )
				usage
				;;
			{*} )
				if [ -f "$opt" ] ; then
					addFile "$opt"
				else
					jsopts="$opt"
				fi
				;;
			-t | --testing )
				root="`abspath $0`"
				root="`dirname $root`"
				;;
			-- )
				;;
			* )
				if [ -f "$opt" ] ; then
					addFile "$opt"
				else
					echo "file arg $opt does not exist; ignoring" >&2
				fi
				;;
		esac
	done
}

run_js() {
	style="$1"
	interpreter="$2"

	oldifs="$IFS"
	IFS=`echo -en "\n\b"`
	for file in "$files"; do
		if [ -r "$file" ]; then
			# restore the IFS because bourne shell under os x and some other
			# lame shells use it for evaluating command-lines
			IFS="$oldifs"
			if [ "$style" = "jsc" ] ; then
				( cat "$file" ; echo "EOF***" ) | "$interpreter" -- $root/env/jsc.js "$root/jshint.js" "$jsopts" "$file"
			else
				cat "$file" | "$interpreter" $root/env/jsc.js "$root/jshint.js" "$jsopts" "$file"
			fi
			IFS=`echo -en "\n\b"`
		else
			echo "Error while reading: '$file'"
		fi
	done
	IFS="$oldifs"
}


main() {
	getOpts "$@"

	if [ -z "$files" ] ; then
		usage
	fi

	if quiet which d8; then
		d8 "$root"/env/d8.js -- "$jsopts" "$files"
	elif quiet which smjs; then
		run_js smjs smjs
	elif quiet which jsc; then
		run_js jsc jsc
	elif [ -e /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc ]; then
		# jsc under modern OS X doesn't seem to support command-line
		# arguments, so this probably won't work
		run_js jsc /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc
	else
		echo "Could not find any supported JavaScript environment. Looked for: d8 jsc smjs" >&2
		exit 1
	fi
}

main "$@"

# vim: set noexpandtab:
